package main

import (
	"bytes"
	"encoding/json"
	"flag"
	"fmt"
	"github.com/cheynewallace/tabby"
	"io/ioutil"
	"net/http"
	"os"
	"strings"
)

var _URL string = ""

func _list() {
	postBody, _ := json.Marshal(map[string]string{
		"command":  "listFiles",
	})
	responseBody := bytes.NewBuffer(postBody)
	resp, err := http.Post(_URL, "application/json", responseBody)
	if err != nil {
		fmt.Println(err.Error())
		os.Exit(1)
	}
	defer resp.Body.Close()

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		fmt.Println()
	}
	bdS := strings.Split(string(body),"\n")


	t := tabby.New()
	t.AddHeader("NAME","DATE","TYPE","SIZE")
	for i := 1; i < (len(bdS)-1); i++ {
		bdr := bdS[i]
		bdrS := strings.Split(bdr,`"`)
		t.AddLine(bdrS[3],bdrS[7],bdrS[11],bdrS[15])
		//fmt.Println(bdrS[3]," ",bdrS[7]," ",bdrS[11]," ",bdrS[15])
	}
	t.Print()
}

func openfile() {
	r,_ := http.Get(_URL)
	body,_ := ioutil.ReadAll(r.Body)
	sb := string(body)
	fmt.Println(sb)
}

type Info_device struct {
	name string
	ftpRoot string
	ftpPort string
}

func get_info() {
	postBody, _ := json.Marshal(map[string]string{
		"command":  "getDeviceInfo",
	})
	responseBody := bytes.NewBuffer(postBody)
	resp, err := http.Post(_URL, "application/json", responseBody)
	if err != nil {
		fmt.Println(err.Error())
		os.Exit(1)
	}
	defer resp.Body.Close()

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		fmt.Println()
	}
	var info Info_device
	json.Unmarshal(body,&info)
	println(info.name)
	fmt.Println(string(body))
}

func main() {
	var u = flag.String("u","","URL.")
	var f = flag.Bool("f",false,"Open File.")
	var ls = flag.Bool("ls",false,"List files and folders.")
	var gi = flag.Bool("getinfo",false,"Get Device info.")
	flag.Parse()

	if len(*u) == 0 {
		fmt.Println("Usage: -u http://ip:post/")
		os.Exit(1)
	}

	_URL = *u

	if *f {
		openfile()
	}
	if *ls {
		_list()
	}
	if *gi {
		get_info()
	}
}
